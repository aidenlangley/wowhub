.member {
  --gaps: theme('gap.4');
  --name-size: theme('fontSize.36');
  --name-row: 2.75rem; /* This is slightly more than --name-size. */

  display: grid;
  grid-template-areas:
    'header '
    'blurb  ';
  gap: var(--gaps);
  padding: var(--gaps);

  /*
  Transitions so things move and animate when pepeha shows and screen changes
  size
  */
  transition-property: all;
  transition-timing-function: ease-in-out;
  transition-duration: 300ms;
}

header {
  display: grid;
  grid-area: header;
  grid-template-areas:
    'img    '
    'name   '
    'titles '
    'btn    ';
  gap: var(--gaps);
  align-self: flex-end;
}

header .img {
  grid-area: img;
}

header .img > img,
header .img > :global(svg) {
  max-height: theme('height.48');
  width: 100%;
}

header .img > img {
  border-radius: theme('borderRadius.DEFAULT');
  box-shadow: theme('dropShadow.md');
  object-fit: cover;
}

header .img > :global(svg) {
  color: theme('colors.gray.700');
}

header .name {
  grid-area: name;
}

header .name :global(h1) {
  font-size: var(--name-size);
  line-height: var(--name-size);
}

header .titles {
  grid-area: titles;
  color: theme('colors.gray.700');
  font-family: theme('fontFamily.serif');
  align-self: center;

  @apply text-20;
}

header button {
  /* Display */
  grid-area: btn;
  justify-self: flex-start;
  align-self: flex-end;

  /* Button styling */
  border-color: theme('colors.green.300');
  border-radius: theme('borderRadius.DEFAULT');
  padding: theme('padding.2');

  /* Font styling */
  color: theme('colors.white');
  font-family: theme('fontFamily.mono');
  font-weight: theme('fontWeight.medium');

  /* Since it's a tooltip, do cursor stuff */
  cursor: help;

  @apply bg-green-700/80;
}

.blurb {
  grid-area: blurb;
  font-weight: theme('fontWeight.light');
}

@media screen(ty) {
  .member {
    --col-left: 19rem;
    --col-right: 1fr;
  }

  header {
    grid-template-columns: var(--col-left) var(--col-right);
    grid-template-rows: repeat(auto-fit, minmax(var(--name-row), 1fr));
    grid-template-areas:
      'img  name  '
      'img  titles'
      'img  btn   ';
  }

  .right header {
    grid-template-columns: var(--col-right) var(--col-left);
    grid-template-areas:
      'name   img'
      'titles img'
      'btn    img';
  }

  header .name {
    align-self: flex-end;
  }

  .right header .name {
    justify-self: end;
    text-align: end;
  }

  header .titles {
    @apply text-base;
  }

  .right header .titles {
    text-align: end;
  }

  .right header button {
    justify-self: self-end;
  }

  .right .blurb {
    text-align: end;
  }
}

@media screen(lg) {
  header .titles {
    @apply text-20;
  }
}

@media screen(wide) {
  .member {
    --name-size: theme('fontSize.56');
    --name-row: 3.75rem; /* This is slightly more than --name-size. */
    --col-left: 24rem;
    --col-right: 1fr;
  }

  header {
    grid-template-areas:
      'img  name  '
      'img  titles'
      'img  btn   ';
  }

  header .img > img,
  header .img > :global(svg) {
    max-height: theme('height.60');
  }

  header .name :global(h1) {
    font-size: var(--name-size);
    line-height: var(--name-size);
  }
}

:global(.dark) header .img > :global(svg) {
  color: theme('colors.green.300');
}

:global(.dark) header .titles {
  color: theme('colors.gray.300');
}
